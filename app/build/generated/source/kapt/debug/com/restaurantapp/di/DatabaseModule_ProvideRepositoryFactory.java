// Generated by Dagger (https://dagger.dev).
package com.restaurantapp.di;

import com.restaurantapp.data.dao.CartDao;
import com.restaurantapp.data.dao.MenuItemDao;
import com.restaurantapp.data.dao.OrderDao;
import com.restaurantapp.data.dao.OrderItemDao;
import com.restaurantapp.data.dao.SalesDataDao;
import com.restaurantapp.data.dao.TableDao;
import com.restaurantapp.data.dao.UserDao;
import com.restaurantapp.data.repository.RestaurantRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideRepositoryFactory implements Factory<RestaurantRepository> {
  private final Provider<UserDao> userDaoProvider;

  private final Provider<TableDao> tableDaoProvider;

  private final Provider<MenuItemDao> menuItemDaoProvider;

  private final Provider<OrderDao> orderDaoProvider;

  private final Provider<OrderItemDao> orderItemDaoProvider;

  private final Provider<SalesDataDao> salesDataDaoProvider;

  private final Provider<CartDao> cartDaoProvider;

  public DatabaseModule_ProvideRepositoryFactory(Provider<UserDao> userDaoProvider,
      Provider<TableDao> tableDaoProvider, Provider<MenuItemDao> menuItemDaoProvider,
      Provider<OrderDao> orderDaoProvider, Provider<OrderItemDao> orderItemDaoProvider,
      Provider<SalesDataDao> salesDataDaoProvider, Provider<CartDao> cartDaoProvider) {
    this.userDaoProvider = userDaoProvider;
    this.tableDaoProvider = tableDaoProvider;
    this.menuItemDaoProvider = menuItemDaoProvider;
    this.orderDaoProvider = orderDaoProvider;
    this.orderItemDaoProvider = orderItemDaoProvider;
    this.salesDataDaoProvider = salesDataDaoProvider;
    this.cartDaoProvider = cartDaoProvider;
  }

  @Override
  public RestaurantRepository get() {
    return provideRepository(userDaoProvider.get(), tableDaoProvider.get(), menuItemDaoProvider.get(), orderDaoProvider.get(), orderItemDaoProvider.get(), salesDataDaoProvider.get(), cartDaoProvider.get());
  }

  public static DatabaseModule_ProvideRepositoryFactory create(Provider<UserDao> userDaoProvider,
      Provider<TableDao> tableDaoProvider, Provider<MenuItemDao> menuItemDaoProvider,
      Provider<OrderDao> orderDaoProvider, Provider<OrderItemDao> orderItemDaoProvider,
      Provider<SalesDataDao> salesDataDaoProvider, Provider<CartDao> cartDaoProvider) {
    return new DatabaseModule_ProvideRepositoryFactory(userDaoProvider, tableDaoProvider, menuItemDaoProvider, orderDaoProvider, orderItemDaoProvider, salesDataDaoProvider, cartDaoProvider);
  }

  public static RestaurantRepository provideRepository(UserDao userDao, TableDao tableDao,
      MenuItemDao menuItemDao, OrderDao orderDao, OrderItemDao orderItemDao,
      SalesDataDao salesDataDao, CartDao cartDao) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideRepository(userDao, tableDao, menuItemDao, orderDao, orderItemDao, salesDataDao, cartDao));
  }
}
